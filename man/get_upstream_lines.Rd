% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_upstream_lines.R
\name{get_upstream_lines}
\alias{get_upstream_lines}
\title{Get upstream lines}
\usage{
get_upstream_lines(
  strm = NA,
  jnid = "c2ad6151e60a49dbabcb59d85eda4cba",
  us_limit = 1000
)
}
\arguments{
\item{strm}{Class sf (multilinestring). Stream lines from NHN working unit (NHN_HN_NLFLOW_1)}

\item{jnid}{Character. Junction ID from NHN_HN_HYDROJUNCT_0 e.g., "92607204bc7e4dcb939fbc57b709be0b"}

\item{us_limit}{Numeric. Number of iterations upstream steps}
}
\value{
Upstream lines
}
\description{
Trace upstream flow lines from a point
}
\details{
Get upstream lines following all upstream flow paths from a junction ID. Inputs include the streamline layer, jnid junction ID and us_limit (a special parameter specifying how many steps to take).
}
\examples{
\dontrun{

# Get upstream lines from the following target junction:
target_junction <- "c2ad6151e60a49dbabcb59d85eda4cba"

# Load example data
filename_strm <- system.file("extdata", "NHN_HN_NLFLOW_1.gpkg", package = "canadaNHN")
strm <- sf::st_read(paste0(filename_strm), layer="NHN_HN_NLFLOW_1")
strm <- sf::st_zm(strm)
us_lines <- get_upstream_lines(strm = strm,
jnid = target_junction,
us_limit = 1000)
plot(sf::st_geometry(strm))
plot(sf::st_geometry(us_lines), add = TRUE, col = "red")
out_sl <- strm[strm$fromJunction == target_junction, ]
plot(sf::st_geometry(out_sl), add = TRUE, col = "yellow", lwd = 3)
# mapview(ds_lines)

}

}
