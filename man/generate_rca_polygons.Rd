% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_rca_polygons.R
\name{generate_rca_polygons}
\alias{generate_rca_polygons}
\title{Generates RCA Polygons}
\usage{
generate_rca_polygons(basin = NA, strm = NA, pt_density_m = 50)
}
\arguments{
\item{basin}{Class sf (multipolygon). Basin boundary for working unit. Ideally the NHN_WORKUNIT_LIMIT_2}

\item{strm}{Class sf (multilinestring). Stream lines from NHN working unit (NHN_HN_NLFLOW_1)}

\item{pt_density_m}{Numeric. RCA point resolution (in meters). Defaults to 50m. Decrease or improve resolution at the cost of processing speed.}
}
\value{
None
}
\description{
Generates RCA polygons for an NHN region
}
\details{
This function should be run after the streamlines are cleaned and topology is corrected. This can be achieved by running \code{get_upstream_lines} with the junction id from the outlet of the target region. See example.
}
\examples{
\dontrun{

filename_strm <- system.file("extdata", "NHN_HN_NLFLOW_1.gpkg", package = "canadaNHN")
filename_basin <- system.file("extdata", "NHN_WORKUNIT_LIMIT_2.gpkg", package = "canadaNHN")

# Load example data
# NHN Streamlines
strm <- sf::st_read(paste0(filename_strm), layer="NHN_HN_NLFLOW_1")
# Drop Z geometry
strm <- sf::st_zm(strm)

# Convert to local UTM zone
strm <- sf::st_transform(strm, util_utm_zone(strm))
sf::st_crs(strm)$epsg
# Basin boundary
basin <- sf::st_read(paste0(filename_basin), layer="NHN_WORKUNIT_LIMIT_2")

# Recommended: Run get_upstream_lines() first with the basin outlet
# this prevents network topology issues with isolated segments
outlet_junction <- '310665e2e3dd4738b26b031a85d2bb19'
strm_fix <- get_upstream_lines(strm = strm, jnid = outlet_junction)


# RCA Polygons from NHN network
rca <- generate_rca_polygons(basin = basin, strm = strm_fix, pt_density_m = 50)

plot(sf::st_geometry(rca), col = "#e0d7ab", border = "#f7f5e9")
plot(sf::st_geometry(strm), col = "#395387", add = TRUE)


}

}
